//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 魂性循环表.xlsm SHEET: Sheet1 KEY: spiritnum

#pragma once
#pragma pack(1)
struct WingSpiritPieceBase
{
	DWORD getUniqueID() const { return usage_id_hash(spiritnum); }

	DWORD spiritnum; // 总计魂点组
	DWORD spiritpiecenum; // 魂性循环值
};
#pragma pack()

#if false
namespace table
{
	// 魂性循环表
	struct zWingSpiritPieceBaseEntry : public zEntry
	{
		DWORD spiritnum; // 总计魂点组
		DWORD spiritpiecenum; // 魂性循环值

		virtual const char* getClassName() const { return "魂性循环表"; }
		static const char* getFileName() { return "WingSpiritPieceBase.tbl"; }
		void fill(const WingSpiritPieceBase& base)
		{
			this->id = base.getUniqueID();

			this->spiritnum = base.spiritnum;
			this->spiritpiecenum = base.spiritpiecenum;
		}
		void reset()
		{
			this->spiritnum = 0;
			this->spiritpiecenum = 0;
		}
	};
	typedef zDataBM<zWingSpiritPieceBaseEntry, WingSpiritPieceBase> WingSpiritPieceBaseManager;
}
#endif

