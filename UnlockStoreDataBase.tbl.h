//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: Unlock背包仓库格.xlsx SHEET: Sheet1 KEY: pack_id + index

#pragma once
#pragma pack(1)
struct UnlockStoreDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(pack_id, index); }

	WORD index; // 解锁序号
	WORD pack_id; // 背包ID
	WORD need_lev; // 解锁等级
	BYTE need_viplev; // VIP限定
	WORD init_num; // 初始开启格数
	WORD max_num; // 格子上限
	BYTE money_type; // 解锁货币类型
	DWORD money_num; // 解锁货币数量
};
#pragma pack()

#if false
namespace table
{
	// Unlock背包仓库格
	struct zUnlockStoreDataBaseEntry : public zEntry
	{
		WORD index; // 解锁序号
		WORD pack_id; // 背包ID
		WORD need_lev; // 解锁等级
		BYTE need_viplev; // VIP限定
		WORD init_num; // 初始开启格数
		WORD max_num; // 格子上限
		BYTE money_type; // 解锁货币类型
		DWORD money_num; // 解锁货币数量

		virtual const char* getClassName() const { return "Unlock背包仓库格"; }
		static const char* getFileName() { return "UnlockStoreDataBase.tbl"; }
		void fill(const UnlockStoreDataBase& base)
		{
			this->id = base.getUniqueID();

			this->index = base.index;
			this->pack_id = base.pack_id;
			this->need_lev = base.need_lev;
			this->need_viplev = base.need_viplev;
			this->init_num = base.init_num;
			this->max_num = base.max_num;
			this->money_type = base.money_type;
			this->money_num = base.money_num;
		}
		void reset()
		{
			this->index = 0;
			this->pack_id = 0;
			this->need_lev = 0;
			this->need_viplev = 0;
			this->init_num = 0;
			this->max_num = 0;
			this->money_type = 0;
			this->money_num = 0;
		}
	};
	typedef zDataBM<zUnlockStoreDataBaseEntry, UnlockStoreDataBase> UnlockStoreDataBaseManager;
}
#endif

