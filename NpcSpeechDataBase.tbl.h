//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: NPC对话表.xlsm SHEET: Sheet1 KEY: id

#pragma once
#pragma pack(1)
struct NpcSpeechDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(id); }

	DWORD id; // ID编号
	char text1[2048]; // 点击文本1
	char text2[2048]; // 点击文本2
	char text3[2048]; // 点击文本3
};
#pragma pack()

#if false
namespace table
{
	// NPC对话表
	struct zNpcSpeechDataBaseEntry : public zEntry
	{
		DWORD id; // ID编号
		char text1[2048]; // 点击文本1
		char text2[2048]; // 点击文本2
		char text3[2048]; // 点击文本3

		virtual const char* getClassName() const { return "NPC对话表"; }
		static const char* getFileName() { return "NpcSpeechDataBase.tbl"; }
		void fill(const NpcSpeechDataBase& base)
		{
			this->id = base.getUniqueID();

			this->id = base.id;
			strncpy(this->text1, base.text1, 2048);
			strncpy(this->text2, base.text2, 2048);
			strncpy(this->text3, base.text3, 2048);
		}
		void reset()
		{
			this->id = 0;
			this->text1[0] = '\0';
			this->text2[0] = '\0';
			this->text3[0] = '\0';
		}
	};
	typedef zDataBM<zNpcSpeechDataBaseEntry, NpcSpeechDataBase> NpcSpeechDataBaseManager;
}
#endif

