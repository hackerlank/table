//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: Role属性设定.xlsx SHEET: 属性转化 KEY: role + prop

#pragma once
#pragma pack(1)
struct UserPropChangeDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(role, prop); }

	DWORD prop; // 属性
	DWORD role; // 职业
	DWORD maxhp; // 生命值
	DWORD maxsp; // 法力值
	DWORD pdam; // 物理攻击
	DWORD pdef; // 物理防御
	DWORD mdam; // 法术攻击
	DWORD mdef; // 法术防御
	DWORD lucky; // 物理致命
	DWORD mlucky; // 法术致命
	DWORD cure; // 治疗
};
#pragma pack()

#if false
namespace table
{
	// Role属性设定
	struct zUserPropChangeDataBaseEntry : public zEntry
	{
		DWORD prop; // 属性
		DWORD role; // 职业
		DWORD maxhp; // 生命值
		DWORD maxsp; // 法力值
		DWORD pdam; // 物理攻击
		DWORD pdef; // 物理防御
		DWORD mdam; // 法术攻击
		DWORD mdef; // 法术防御
		DWORD lucky; // 物理致命
		DWORD mlucky; // 法术致命
		DWORD cure; // 治疗

		virtual const char* getClassName() const { return "Role属性设定"; }
		static const char* getFileName() { return "UserPropChangeDataBase.tbl"; }
		void fill(const UserPropChangeDataBase& base)
		{
			this->id = base.getUniqueID();

			this->prop = base.prop;
			this->role = base.role;
			this->maxhp = base.maxhp;
			this->maxsp = base.maxsp;
			this->pdam = base.pdam;
			this->pdef = base.pdef;
			this->mdam = base.mdam;
			this->mdef = base.mdef;
			this->lucky = base.lucky;
			this->mlucky = base.mlucky;
			this->cure = base.cure;
		}
		void reset()
		{
			this->prop = 0;
			this->role = 0;
			this->maxhp = 0;
			this->maxsp = 0;
			this->pdam = 0;
			this->pdef = 0;
			this->mdam = 0;
			this->mdef = 0;
			this->lucky = 0;
			this->mlucky = 0;
			this->cure = 0;
		}
	};
	typedef zDataBM<zUserPropChangeDataBaseEntry, UserPropChangeDataBase> UserPropChangeDataBaseManager;
}
#endif

