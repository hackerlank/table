//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 材料合成表.xlsm SHEET: Sheet1 KEY: id

#pragma once
#pragma pack(1)
struct MaterialDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(id); }

	DWORD id; // 材料编号
	DWORD type; // 合成类型
	DWORD target; // 合成目标
	DWORD neednum; // 需求数量
	DWORD okrate; // 成功几率
	DWORD level; // 合成等级标识
};
#pragma pack()

#if false
namespace table
{
	// 材料合成表
	struct zMaterialDataBaseEntry : public zEntry
	{
		DWORD id; // 材料编号
		DWORD type; // 合成类型
		DWORD target; // 合成目标
		DWORD neednum; // 需求数量
		DWORD okrate; // 成功几率
		DWORD level; // 合成等级标识

		virtual const char* getClassName() const { return "材料合成表"; }
		static const char* getFileName() { return "MaterialDataBase.tbl"; }
		void fill(const MaterialDataBase& base)
		{
			this->id = base.getUniqueID();

			this->id = base.id;
			this->type = base.type;
			this->target = base.target;
			this->neednum = base.neednum;
			this->okrate = base.okrate;
			this->level = base.level;
		}
		void reset()
		{
			this->id = 0;
			this->type = 0;
			this->target = 0;
			this->neednum = 0;
			this->okrate = 0;
			this->level = 0;
		}
	};
	typedef zDataBM<zMaterialDataBaseEntry, MaterialDataBase> MaterialDataBaseManager;
}
#endif

