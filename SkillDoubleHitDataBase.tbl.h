//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: Skill连击表.xlsm SHEET: Sheet1 KEY: skillid

#pragma once
#pragma pack(1)
struct SkillDoubleHitDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(skillid); }

	DWORD skillid; // 技能ID
	DWORD nextskillid; // 后续技能ID
	DWORD beginskillid; // 开始技能ID
	DWORD doublehitend; // 连击失效时间
	DWORD basedamageratio; // 基础伤害系数
};
#pragma pack()

#if false
namespace table
{
	// Skill连击表
	struct zSkillDoubleHitDataBaseEntry : public zEntry
	{
		DWORD skillid; // 技能ID
		DWORD nextskillid; // 后续技能ID
		DWORD beginskillid; // 开始技能ID
		DWORD doublehitend; // 连击失效时间
		DWORD basedamageratio; // 基础伤害系数

		virtual const char* getClassName() const { return "Skill连击表"; }
		static const char* getFileName() { return "SkillDoubleHitDataBase.tbl"; }
		void fill(const SkillDoubleHitDataBase& base)
		{
			this->id = base.getUniqueID();

			this->skillid = base.skillid;
			this->nextskillid = base.nextskillid;
			this->beginskillid = base.beginskillid;
			this->doublehitend = base.doublehitend;
			this->basedamageratio = base.basedamageratio;
		}
		void reset()
		{
			this->skillid = 0;
			this->nextskillid = 0;
			this->beginskillid = 0;
			this->doublehitend = 0;
			this->basedamageratio = 0;
		}
	};
	typedef zDataBM<zSkillDoubleHitDataBaseEntry, SkillDoubleHitDataBase> SkillDoubleHitDataBaseManager;
}
#endif

