//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 装备鉴定表.xlsm SHEET: Sheet1 KEY: equipid + quality + prefix

#pragma once
#pragma pack(1)
struct EquipJudgeDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(equipid, quality, prefix); }

	WORD prefix; // 前缀
	WORD quality; // 品质
	DWORD equipid; // 装备ID
	DWORD flag; // 单防归一
	char five[32]; // 五行属性
	char pdam[32]; // 增加物攻
	char mdam[32]; // 增加化攻
	char phit[32]; // 增加物命中
	char mhit[32]; // 增加化命中
	char pdef[32]; // 增加物防
	char mdef[32]; // 增加化防
	char maxhp[32]; // 增加生命值
	char rndam[32]; // 热能攻击
	char gbdam[32]; // 光波攻击
	char sbdam[32]; // 声波攻击
	char shdam[32]; // 生化攻击
	char rndef[32]; // 热能防御
	char gbdef[32]; // 光波防御
	char sbdef[32]; // 声波防御
	char shdef[32]; // 生化防御
	char holepdam[32]; // 物攻增加
	char holemdam[32]; // 化攻增加
	char holepdef[32]; // 物防增加
	char holemdef[32]; // 化防增加
	char holephit[32]; // 物理最大值增加
	char holemhit[32]; // 化学最大值增加
	char holemaxhp[32]; // 生命值增加
	char pdamext[32]; // 物攻附加
	char mdamext[32]; // 化攻附加
	char pdefext[32]; // 物防附加
	char mdefext[32]; // 化防附加
	char maxhpext[32]; // 生命值附加
	char maxspext[32]; // 体力值附加
	char addhp[32]; // 偷取生命
	char addsp[32]; // 偷取体力
	char addexp[32]; // 偷取经验
	char mvspd[32]; // 速度提升
	char phitext[32]; // 物攻最大值附加
	char mhitext[32]; // 化攻最大值附加
	char hideext[32]; // 闪避率增加
	char pdamper[32]; // 物攻提升
	char mdamper[32]; // 化攻提升
	char pdefper[32]; // 物防提升
	char mdefper[32]; // 化防提升
	char maxhpper[32]; // 生命值提升
};
#pragma pack()

#if false
namespace table
{
	// 装备鉴定表
	struct zEquipJudgeDataBaseEntry : public zEntry
	{
		WORD prefix; // 前缀
		WORD quality; // 品质
		DWORD equipid; // 装备ID
		DWORD flag; // 单防归一
		char five[32]; // 五行属性
		char pdam[32]; // 增加物攻
		char mdam[32]; // 增加化攻
		char phit[32]; // 增加物命中
		char mhit[32]; // 增加化命中
		char pdef[32]; // 增加物防
		char mdef[32]; // 增加化防
		char maxhp[32]; // 增加生命值
		char rndam[32]; // 热能攻击
		char gbdam[32]; // 光波攻击
		char sbdam[32]; // 声波攻击
		char shdam[32]; // 生化攻击
		char rndef[32]; // 热能防御
		char gbdef[32]; // 光波防御
		char sbdef[32]; // 声波防御
		char shdef[32]; // 生化防御
		char holepdam[32]; // 物攻增加
		char holemdam[32]; // 化攻增加
		char holepdef[32]; // 物防增加
		char holemdef[32]; // 化防增加
		char holephit[32]; // 物理最大值增加
		char holemhit[32]; // 化学最大值增加
		char holemaxhp[32]; // 生命值增加
		char pdamext[32]; // 物攻附加
		char mdamext[32]; // 化攻附加
		char pdefext[32]; // 物防附加
		char mdefext[32]; // 化防附加
		char maxhpext[32]; // 生命值附加
		char maxspext[32]; // 体力值附加
		char addhp[32]; // 偷取生命
		char addsp[32]; // 偷取体力
		char addexp[32]; // 偷取经验
		char mvspd[32]; // 速度提升
		char phitext[32]; // 物攻最大值附加
		char mhitext[32]; // 化攻最大值附加
		char hideext[32]; // 闪避率增加
		char pdamper[32]; // 物攻提升
		char mdamper[32]; // 化攻提升
		char pdefper[32]; // 物防提升
		char mdefper[32]; // 化防提升
		char maxhpper[32]; // 生命值提升

		virtual const char* getClassName() const { return "装备鉴定表"; }
		static const char* getFileName() { return "EquipJudgeDataBase.tbl"; }
		void fill(const EquipJudgeDataBase& base)
		{
			this->id = base.getUniqueID();

			this->prefix = base.prefix;
			this->quality = base.quality;
			this->equipid = base.equipid;
			this->flag = base.flag;
			strncpy(this->five, base.five, 32);
			strncpy(this->pdam, base.pdam, 32);
			strncpy(this->mdam, base.mdam, 32);
			strncpy(this->phit, base.phit, 32);
			strncpy(this->mhit, base.mhit, 32);
			strncpy(this->pdef, base.pdef, 32);
			strncpy(this->mdef, base.mdef, 32);
			strncpy(this->maxhp, base.maxhp, 32);
			strncpy(this->rndam, base.rndam, 32);
			strncpy(this->gbdam, base.gbdam, 32);
			strncpy(this->sbdam, base.sbdam, 32);
			strncpy(this->shdam, base.shdam, 32);
			strncpy(this->rndef, base.rndef, 32);
			strncpy(this->gbdef, base.gbdef, 32);
			strncpy(this->sbdef, base.sbdef, 32);
			strncpy(this->shdef, base.shdef, 32);
			strncpy(this->holepdam, base.holepdam, 32);
			strncpy(this->holemdam, base.holemdam, 32);
			strncpy(this->holepdef, base.holepdef, 32);
			strncpy(this->holemdef, base.holemdef, 32);
			strncpy(this->holephit, base.holephit, 32);
			strncpy(this->holemhit, base.holemhit, 32);
			strncpy(this->holemaxhp, base.holemaxhp, 32);
			strncpy(this->pdamext, base.pdamext, 32);
			strncpy(this->mdamext, base.mdamext, 32);
			strncpy(this->pdefext, base.pdefext, 32);
			strncpy(this->mdefext, base.mdefext, 32);
			strncpy(this->maxhpext, base.maxhpext, 32);
			strncpy(this->maxspext, base.maxspext, 32);
			strncpy(this->addhp, base.addhp, 32);
			strncpy(this->addsp, base.addsp, 32);
			strncpy(this->addexp, base.addexp, 32);
			strncpy(this->mvspd, base.mvspd, 32);
			strncpy(this->phitext, base.phitext, 32);
			strncpy(this->mhitext, base.mhitext, 32);
			strncpy(this->hideext, base.hideext, 32);
			strncpy(this->pdamper, base.pdamper, 32);
			strncpy(this->mdamper, base.mdamper, 32);
			strncpy(this->pdefper, base.pdefper, 32);
			strncpy(this->mdefper, base.mdefper, 32);
			strncpy(this->maxhpper, base.maxhpper, 32);
		}
		void reset()
		{
			this->prefix = 0;
			this->quality = 0;
			this->equipid = 0;
			this->flag = 0;
			this->five[0] = '\0';
			this->pdam[0] = '\0';
			this->mdam[0] = '\0';
			this->phit[0] = '\0';
			this->mhit[0] = '\0';
			this->pdef[0] = '\0';
			this->mdef[0] = '\0';
			this->maxhp[0] = '\0';
			this->rndam[0] = '\0';
			this->gbdam[0] = '\0';
			this->sbdam[0] = '\0';
			this->shdam[0] = '\0';
			this->rndef[0] = '\0';
			this->gbdef[0] = '\0';
			this->sbdef[0] = '\0';
			this->shdef[0] = '\0';
			this->holepdam[0] = '\0';
			this->holemdam[0] = '\0';
			this->holepdef[0] = '\0';
			this->holemdef[0] = '\0';
			this->holephit[0] = '\0';
			this->holemhit[0] = '\0';
			this->holemaxhp[0] = '\0';
			this->pdamext[0] = '\0';
			this->mdamext[0] = '\0';
			this->pdefext[0] = '\0';
			this->mdefext[0] = '\0';
			this->maxhpext[0] = '\0';
			this->maxspext[0] = '\0';
			this->addhp[0] = '\0';
			this->addsp[0] = '\0';
			this->addexp[0] = '\0';
			this->mvspd[0] = '\0';
			this->phitext[0] = '\0';
			this->mhitext[0] = '\0';
			this->hideext[0] = '\0';
			this->pdamper[0] = '\0';
			this->mdamper[0] = '\0';
			this->pdefper[0] = '\0';
			this->mdefper[0] = '\0';
			this->maxhpper[0] = '\0';
		}
	};
	typedef zDataBM<zEquipJudgeDataBaseEntry, EquipJudgeDataBase> EquipJudgeDataBaseManager;
}
#endif

