//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 道具类型表.xlsm SHEET: Sheet1 KEY: id

#pragma once
#pragma pack(1)
struct ItemTypeDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(id); }

	DWORD id; // 类型
	char name[512]; // 类型名称
	DWORD packposition; // 装备位置
	DWORD recycle; // 是否需要回收
};
#pragma pack()

#if false
namespace table
{
	// 道具类型表
	struct zItemTypeDataBaseEntry : public zEntry
	{
		DWORD id; // 类型
		char name[512]; // 类型名称
		DWORD packposition; // 装备位置
		DWORD recycle; // 是否需要回收

		virtual const char* getClassName() const { return "道具类型表"; }
		static const char* getFileName() { return "ItemTypeDataBase.tbl"; }
		void fill(const ItemTypeDataBase& base)
		{
			this->id = base.getUniqueID();

			this->id = base.id;
			strncpy(this->name, base.name, 512);
			this->packposition = base.packposition;
			this->recycle = base.recycle;
		}
		void reset()
		{
			this->id = 0;
			this->name[0] = '\0';
			this->packposition = 0;
			this->recycle = 0;
		}
	};
	typedef zDataBM<zItemTypeDataBaseEntry, ItemTypeDataBase> ItemTypeDataBaseManager;
}
#endif

