//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: Effect.xlsm SHEET: Sheet1 KEY: effect_id

#pragma once
#pragma pack(1)
struct EffectDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(effect_id); }

	DWORD effect_id; // ID
	WORD type_id; // 类型ID
	int para_one; // 参数1
	int para_two; // 参数2
	int para_three; // 参数3
};
#pragma pack()

#if false
namespace table
{
	// Effect
	struct zEffectDataBaseEntry : public zEntry
	{
		DWORD effect_id; // ID
		WORD type_id; // 类型ID
		int para_one; // 参数1
		int para_two; // 参数2
		int para_three; // 参数3

		virtual const char* getClassName() const { return "Effect"; }
		static const char* getFileName() { return "EffectDataBase.tbl"; }
		void fill(const EffectDataBase& base)
		{
			this->id = base.getUniqueID();

			this->effect_id = base.effect_id;
			this->type_id = base.type_id;
			this->para_one = base.para_one;
			this->para_two = base.para_two;
			this->para_three = base.para_three;
		}
		void reset()
		{
			this->effect_id = 0;
			this->type_id = 0;
			this->para_one = 0;
			this->para_two = 0;
			this->para_three = 0;
		}
	};
	typedef zDataBM<zEffectDataBaseEntry, EffectDataBase> EffectDataBaseManager;
}
#endif

