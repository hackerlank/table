//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 人类进程表.xlsm SHEET: Sheet1 KEY: progress

#pragma once
#pragma pack(1)
struct WorldLevelBase
{
	DWORD getUniqueID() const { return usage_id_hash(progress); }

	DWORD progress; // 人类进程
	DWORD max_user_level; // 最高等级
	DWORD max_all_level; // 血脉总等级
	DWORD min_day; // 最少天数
	DWORD max_demon_level; // 宠物最高等级
};
#pragma pack()

#if false
namespace table
{
	// 人类进程表
	struct zWorldLevelBaseEntry : public zEntry
	{
		DWORD progress; // 人类进程
		DWORD max_user_level; // 最高等级
		DWORD max_all_level; // 血脉总等级
		DWORD min_day; // 最少天数
		DWORD max_demon_level; // 宠物最高等级

		virtual const char* getClassName() const { return "人类进程表"; }
		static const char* getFileName() { return "WorldLevelBase.tbl"; }
		void fill(const WorldLevelBase& base)
		{
			this->id = base.getUniqueID();

			this->progress = base.progress;
			this->max_user_level = base.max_user_level;
			this->max_all_level = base.max_all_level;
			this->min_day = base.min_day;
			this->max_demon_level = base.max_demon_level;
		}
		void reset()
		{
			this->progress = 0;
			this->max_user_level = 0;
			this->max_all_level = 0;
			this->min_day = 0;
			this->max_demon_level = 0;
		}
	};
	typedef zDataBM<zWorldLevelBaseEntry, WorldLevelBase> WorldLevelBaseManager;
}
#endif

