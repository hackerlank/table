//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 神谕等级表.xlsm SHEET: Sheet1 KEY: oracleid

#pragma once
#pragma pack(1)
struct WingOracleLevelBase
{
	DWORD getUniqueID() const { return usage_id_hash(oracleid); }

	DWORD oracleid; // 神谕ID
	DWORD inlayprice; // 镶嵌费用
	DWORD lucky; // 致命
	DWORD bang; // 重击
	DWORD ignoredef; // 忽视防御
	DWORD hurtecho; // 伤害反射
};
#pragma pack()

#if false
namespace table
{
	// 神谕等级表
	struct zWingOracleLevelBaseEntry : public zEntry
	{
		DWORD oracleid; // 神谕ID
		DWORD inlayprice; // 镶嵌费用
		DWORD lucky; // 致命
		DWORD bang; // 重击
		DWORD ignoredef; // 忽视防御
		DWORD hurtecho; // 伤害反射

		virtual const char* getClassName() const { return "神谕等级表"; }
		static const char* getFileName() { return "WingOracleLevelBase.tbl"; }
		void fill(const WingOracleLevelBase& base)
		{
			this->id = base.getUniqueID();

			this->oracleid = base.oracleid;
			this->inlayprice = base.inlayprice;
			this->lucky = base.lucky;
			this->bang = base.bang;
			this->ignoredef = base.ignoredef;
			this->hurtecho = base.hurtecho;
		}
		void reset()
		{
			this->oracleid = 0;
			this->inlayprice = 0;
			this->lucky = 0;
			this->bang = 0;
			this->ignoredef = 0;
			this->hurtecho = 0;
		}
	};
	typedef zDataBM<zWingOracleLevelBaseEntry, WingOracleLevelBase> WingOracleLevelBaseManager;
}
#endif

