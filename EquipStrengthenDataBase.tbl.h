//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 装备强化表.xlsm SHEET: Sheet1 KEY: itemtype + level + isphysical

#pragma once
#pragma pack(1)
struct EquipStrengthenDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(itemtype, level, isphysical); }

	BYTE isphysical; // 物魔区分
	BYTE level; // 强化等级
	WORD itemtype; // 装备类型
	DWORD pdam; // 物理攻击增加
	DWORD mdam; // 魔法攻击增加
	DWORD pdef; // 物理防御增加
	DWORD mdef; // 魔法防御增加
	DWORD maxhp; // 生命增加
	DWORD pdamper; // 物理攻击提升百分比
	DWORD mdamper; // 魔法攻击提升百分比
	DWORD pdefper; // 物理防御提升百分比
	DWORD mdefper; // 魔法防御提升百分比
	DWORD maxhpper; // 生命提升百分比
	DWORD holenum; // 可镶嵌孔数
	DWORD starnum; // 可升星上限
	DWORD materialid; // 升级消耗材料
	DWORD materiallevel; // 升级消耗材料等级
	DWORD materialnum; // 升级消耗材料数量
	DWORD cost; // 升级消耗手续费
	DWORD costtype; // 升级消耗手续费类型
};
#pragma pack()

#if false
namespace table
{
	// 装备强化表
	struct zEquipStrengthenDataBaseEntry : public zEntry
	{
		BYTE isphysical; // 物魔区分
		BYTE level; // 强化等级
		WORD itemtype; // 装备类型
		DWORD pdam; // 物理攻击增加
		DWORD mdam; // 魔法攻击增加
		DWORD pdef; // 物理防御增加
		DWORD mdef; // 魔法防御增加
		DWORD maxhp; // 生命增加
		DWORD pdamper; // 物理攻击提升百分比
		DWORD mdamper; // 魔法攻击提升百分比
		DWORD pdefper; // 物理防御提升百分比
		DWORD mdefper; // 魔法防御提升百分比
		DWORD maxhpper; // 生命提升百分比
		DWORD holenum; // 可镶嵌孔数
		DWORD starnum; // 可升星上限
		DWORD materialid; // 升级消耗材料
		DWORD materiallevel; // 升级消耗材料等级
		DWORD materialnum; // 升级消耗材料数量
		DWORD cost; // 升级消耗手续费
		DWORD costtype; // 升级消耗手续费类型

		virtual const char* getClassName() const { return "装备强化表"; }
		static const char* getFileName() { return "EquipStrengthenDataBase.tbl"; }
		void fill(const EquipStrengthenDataBase& base)
		{
			this->id = base.getUniqueID();

			this->isphysical = base.isphysical;
			this->level = base.level;
			this->itemtype = base.itemtype;
			this->pdam = base.pdam;
			this->mdam = base.mdam;
			this->pdef = base.pdef;
			this->mdef = base.mdef;
			this->maxhp = base.maxhp;
			this->pdamper = base.pdamper;
			this->mdamper = base.mdamper;
			this->pdefper = base.pdefper;
			this->mdefper = base.mdefper;
			this->maxhpper = base.maxhpper;
			this->holenum = base.holenum;
			this->starnum = base.starnum;
			this->materialid = base.materialid;
			this->materiallevel = base.materiallevel;
			this->materialnum = base.materialnum;
			this->cost = base.cost;
			this->costtype = base.costtype;
		}
		void reset()
		{
			this->isphysical = 0;
			this->level = 0;
			this->itemtype = 0;
			this->pdam = 0;
			this->mdam = 0;
			this->pdef = 0;
			this->mdef = 0;
			this->maxhp = 0;
			this->pdamper = 0;
			this->mdamper = 0;
			this->pdefper = 0;
			this->mdefper = 0;
			this->maxhpper = 0;
			this->holenum = 0;
			this->starnum = 0;
			this->materialid = 0;
			this->materiallevel = 0;
			this->materialnum = 0;
			this->cost = 0;
			this->costtype = 0;
		}
	};
	typedef zDataBM<zEquipStrengthenDataBaseEntry, EquipStrengthenDataBase> EquipStrengthenDataBaseManager;
}
#endif

