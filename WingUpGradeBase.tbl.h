//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 羽翼强化表.xlsm SHEET: Sheet1 KEY: level

#pragma once
#pragma pack(1)
struct WingUpGradeBase
{
	DWORD getUniqueID() const { return usage_id_hash(level); }

	DWORD level; // 强化等级
	char success[64]; // 对应成功率
	DWORD pdam; // 物攻附加提升
	DWORD mdam; // 化攻附加提升
	DWORD pdef; // 物防附加提升
	DWORD mdef; // 化防附加提升
	DWORD maxhp; // 生命值附加提升
	DWORD needmoney; // 需要金钱
	DWORD falselevel; // 惩罚等级
	DWORD addrate; // 幸运增加几率
};
#pragma pack()

#if false
namespace table
{
	// 羽翼强化表
	struct zWingUpGradeBaseEntry : public zEntry
	{
		DWORD level; // 强化等级
		char success[64]; // 对应成功率
		DWORD pdam; // 物攻附加提升
		DWORD mdam; // 化攻附加提升
		DWORD pdef; // 物防附加提升
		DWORD mdef; // 化防附加提升
		DWORD maxhp; // 生命值附加提升
		DWORD needmoney; // 需要金钱
		DWORD falselevel; // 惩罚等级
		DWORD addrate; // 幸运增加几率

		virtual const char* getClassName() const { return "羽翼强化表"; }
		static const char* getFileName() { return "WingUpGradeBase.tbl"; }
		void fill(const WingUpGradeBase& base)
		{
			this->id = base.getUniqueID();

			this->level = base.level;
			strncpy(this->success, base.success, 64);
			this->pdam = base.pdam;
			this->mdam = base.mdam;
			this->pdef = base.pdef;
			this->mdef = base.mdef;
			this->maxhp = base.maxhp;
			this->needmoney = base.needmoney;
			this->falselevel = base.falselevel;
			this->addrate = base.addrate;
		}
		void reset()
		{
			this->level = 0;
			this->success[0] = '\0';
			this->pdam = 0;
			this->mdam = 0;
			this->pdef = 0;
			this->mdef = 0;
			this->maxhp = 0;
			this->needmoney = 0;
			this->falselevel = 0;
			this->addrate = 0;
		}
	};
	typedef zDataBM<zWingUpGradeBaseEntry, WingUpGradeBase> WingUpGradeBaseManager;
}
#endif

